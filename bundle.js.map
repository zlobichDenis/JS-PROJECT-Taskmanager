{"version":3,"sources":["webpack://Task Manager/./src/components/boardFilters.js","webpack://Task Manager/./src/components/btnLoadMore.js","webpack://Task Manager/./src/components/cardExample.js","webpack://Task Manager/./src/components/cardForm.js","webpack://Task Manager/./src/components/filters.js","webpack://Task Manager/./src/components/menu.js","webpack://Task Manager/./src/const.js","webpack://Task Manager/./src/mock/filter.js","webpack://Task Manager/./src/mock/task.js","webpack://Task Manager/./src/util.js","webpack://Task Manager/webpack/bootstrap","webpack://Task Manager/webpack/runtime/define property getters","webpack://Task Manager/webpack/runtime/hasOwnProperty shorthand","webpack://Task Manager/webpack/runtime/make namespace object","webpack://Task Manager/./src/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACJkE;;AAElE;;AAEA,SAAS,oEAAoE;;AAE7E,oE;AACA,kCAAkC;;AAElC,kCAAkC,kBAAkB,OAAO,+BAA+B,EAAE;;AAE5F,gBAAgB,kDAAW;AAC3B;AACA;AACA;;AAEA,0DAA0D;AAC1D,kE;;AAEA;;AAEA;AACA,iCAAiC,MAAM,GAAG,YAAY,GAAG,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mCAAmC;AACjG;AACA;AACA;AACA;AACA,+DAA+D,qCAAqC;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,YAAY;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnEkE;;;;AAIlE;AACA,SAAS,sDAAe;AACxB;AACA,oCAAoC,MAAM,kDAAkD,MAAM,uCAAuC,MAAM;AAC/I,MAAM,mCAAmC;AACzC,wBAAwB,MAAM,sCAAsC,MAAM,IAAI,MAAM;AACpF;AACA;AACA,GAAG;AACH;;AAEA,uD;AACA;AACA;AACA;AACA,uFAAuF,IAAI,2BAA2B,IAAI,IAAI,8CAA8C;AAC5K,gDAAgD,IAAI,MAAM,IAAI;AAC9D;AACA,GAAG;AACH;;;AAGA;;AAEA,SAAS,4CAA4C;;;;AAIrD,yE;AACA,sC;;AAEA,oE;AACA;AACA,kCAAkC,kBAAkB,OAAO,kDAAW,qBAAqB,EAAE;AAC7F,0DAA0D;;;AAG1D;AACA;AACA;AACA,kE;;AAEA;;AAEA;AACA,4CAA4C,MAAM,GAAG,YAAY,GAAG,cAAc;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;;AAEA;AACA,2DAA2D,0BAA0B;AACrF;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnHA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA,cAAc,2BAA2B;AACzC,8BAA8B,KAAK;AACnC,cAAc,KAAK,wBAAwB,KAAK,UAAU,MAAM;AAChE;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA,UAAU,c;AACV;AACA;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAE2B;;;;;;;;;;;;;;;;;;;ACXyB;AACC;AACrD;AACA;AACA,qBAAqB,gEAAsB,CAAC,gDAAS;AACrD,eAAe,gEAAsB,CAAC,kDAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;UCNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;ACN+C;AACgB;AACD;AACP;AACO;AACD;;AAEV;AACJ;;AAE/C;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,gEAAe;AAC/B;AACA,cAAc,4DAAa;;;AAG3B;AACA;AACA;AACA,6CAA6C,4DAAO;AACpD,8CAA8C,4EAAoB;AAClE,yCAAyC,2EAAc;AACvD,wCAAwC,0EAAc;AACtD,8CAA8C,oEAAW;AACzD,iBAAiB,gBAAgB;AACjC,+CAA+C,2EAAe;AAC9D;AACA;;;;AAIA;AACA","file":"bundle.js","sourcesContent":["const addBoardFilter = () => {\n    return `\n        <div class=\"board__filter-list\">\n            <a href=\"#\" class=\"board__filter\" data-sort-type=\"default\">SORT BY DEFAULT</a>\n            <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-up\">SORT BY DATE up</a>\n            <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-down\">SORT BY DATE down</a>\n        </div>\n    `\n};\n\nexport { addBoardFilter };","const addBtnLoadMore = () => {\n    return `\n    <button class=\"load-more\" type=\"button\">load more</button>\n    `\n};\n\nexport { addBtnLoadMore };","import { COLORS_CARD, TASK_DESC, MONTH_NAMES } from \"../const.js\";\n\nconst addCardTemplate = (task) => {\n\n  const {description, color, reapeatingDays, dueDate,  isArchive, isFavorite} = task;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now(); \n  const isDateShowing = !!dueDate; // написать фкнцию для возврата значений\n\n  const date = isDateShowing ? `${dueDate.getDate()}` : `${MOTH_NAMES[dueDate.getMonth()]}`;  // для карточки задачи \n \n  const month = MONTH_NAMES[dueDate.getMonth()];\n  const isRepeat = (element) => {\n   return element === true;\n  };\n\n  const deadlineClass = isExpired ? `card--deadline` : ``; // для карточки задачи \n  const isRepeated = Object.values(reapeatingDays).some(isRepeat); \n\n  const repeatClass = isRepeated ? 'card--repeat' : '';\n\n    return `\n    <article class=\"card card--${color} ${repeatClass} ${deadlineClass}\"\n    >\n    <div class=\"card__form\">\n      <div class=\"card__inner\">\n        <div class=\"card__control\">\n          <button type=\"button\" class=\"card__btn card__btn--edit\">\n            edit\n          </button>\n          <button type=\"button\" class=\"card__btn card__btn--${isArchive ? 'archive' : 'disabled'}\">\n            archive\n          </button>\n          <button\n            type=\"button\"\n            class=\"card__btn card__btn--favorites card__btn--${isFavorite ? 'favorite' : 'disabled'}\"\n          >\n            favorites\n          </button>\n        </div>\n\n        <div class=\"card__color-bar\">\n          <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n            <use xlink:href=\"#wave\"></use>\n          </svg>\n        </div>\n\n        <div class=\"card__textarea-wrap\">\n          <p class=\"card__text\">${description}</p>\n        </div>\n\n        <div class=\"card__settings\">\n          <div class=\"card__details\">\n            <div class=\"card__dates\">\n              <div class=\"card__date-deadline\">\n                <p class=\"card__input-deadline-wrap\">\n                  <span class=\"card__date\">${isDateShowing ? month : ''}</span>\n                  <span class=\"card__time\">16:15</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </article>\n    `\n};\n\nexport { addCardTemplate };","import { COLORS_CARD, TASK_DESC, MONTH_NAMES } from \"../const.js\";\n\n\n\nconst createColorsMarkup = () => {\n  return COLORS_CARD.map((color) => {\n    return `\n    <input type=\"radio\" id=\"color-${color}-4\" class=\"card__color-input card__color-input--${color} visually-hidden\" name=\"color\"value=\"${color}\"\n    ${color === 'black' ? 'checked' : ''}/>\n    <label for=\"color-${color}-4\" class=\"card__color card__color--${color}\">${color}</label\n>\n`\n  }).join('\\n');\n};\n\nconst createRepeatingDaysMarkup = (reapeatingDays) => { \n  const keys = Object.keys(reapeatingDays);\n  return keys.map((key) => {\n    return `\n    <input class=\"visually-hidden card__repeat-day-input\" type=\"checkbox\" id=\"repeat-${key}-4\" name=\"repeat\" value=\"${key}\" ${reapeatingDays[key] ? 'checked = \"true\"' : ''}/>\n  <label class=\"card__repeat-day\" for=\"repeat-${key}-4\">${key}</label>\n`\n  }).join('\\n');\n};\n\n\nconst addCardForm = (task) => {\n\n  const {description, color, reapeatingDays, dueDate} = task;\n\n\n\n  const reapeatingDaysMarkup = createRepeatingDaysMarkup(reapeatingDays); \n  const colors = createColorsMarkup(); \n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now(); \n  const isDateShowing = !!dueDate;\n  const date = isDateShowing ? `${dueDate.getDate()}` : `${MONTH_NAMES[dueDate.getMonth()]}`;  // для карточки задачи \n  const deadlineClass = isExpired ? `card--deadline` : ``; // для карточки задачи \n\n\n  const isRepeat = (element) => {\n   return element === true;\n  };\n  const isRepeated = Object.values(reapeatingDays).some(isRepeat); \n\n  const repeatClass = isRepeated ? 'card--repeat' : '';\n\n    return `\n    <article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\">\n    <form class=\"card__form\" method=\"get\">\n      <div class=\"card__inner\">\n        <div class=\"card__color-bar\">\n          <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n            <use xlink:href=\"#wave\"></use>\n          </svg>\n        </div>\n\n        <div class=\"card__textarea-wrap\">\n          <label>\n            <textarea\n              class=\"card__text\"\n              placeholder=\"Start typing your text here...\"\n              name=\"text\"\n            >${description}</textarea>\n          </label>\n        </div>\n\n        <div class=\"card__settings\">\n          <div class=\"card__details\">\n            <div class=\"card__dates\">\n              <button class=\"card__date-deadline-toggle\" type=\"button\">\n                date: <span class=\"card__date-status\">${isDateShowing ? 'yes' : 'no'}</span>\n              </button>\n\n              <fieldset class=\"card__date-deadline\">\n                <label class=\"card__input-deadline-wrap\">\n                  <input\n                    class=\"card__date\"\n                    type=\"text\"\n                    placeholder=\"\"\n                    name=\"date\"\n                    value=\"${dueDate}\"\n                  />\n                </label>\n              </fieldset>\n\n              <button class=\"card__repeat-toggle\" type=\"button\">\n                repeat:<span class=\"card__repeat-status\">${isRepeated ? 'yes' : 'no'}</span>\n              </button>\n\n              <fieldset class=\"card__repeat-days\">\n                <div class=\"card__repeat-days-inner\">\n                  ${reapeatingDaysMarkup}\n                </div>\n              </fieldset>\n            </div>\n          </div>\n\n          <div class=\"card__colors-inner\">\n            <h3 class=\"card__colors-title\">Color</h3>\n            <div class=\"card__colors-wrap\">\n              ${colors}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card__status-btns\">\n          <button class=\"card__save\" type=\"submit\">save</button>\n          <button class=\"card__delete\" type=\"button\">delete</button>\n        </div>\n      </div>\n    </form>\n  </article>\n  `\n};\n\nexport { addCardForm };","const createInput = (filter, isChecked) => {\n    const {name, count} = filter;\n    return `\n        <input\n            type=\"radio\"\n            id=\"filter__${name}\"\n            class=\"filter__input visually-hidden\"\n            name=\"filter\"\n            ${isChecked ? 'checked' : ''} />\n        <label for=\"filter__${name}\" class=\"filter__label\">\n            ${name} <span class=\"filter__${name}-count\">${count}</span>\n        </label>\n        `\n};\n\nconst createFilterTemplate = (filters) => {\n    const filtersMarkup = filters.map((filter, i) => {\n        return createInput(filter, i === 0)}).join('\\n');\n\n    return `\n        ${filtersMarkup}   \n    `\n};\n\nexport { createFilterTemplate };","const addMenu = () => {\n    return `\n        <section class=\"control__btn-wrap\">\n            <input\n                type=\"radio\"\n                name=\"control\"\n                id=\"control__new-task\"\n                class=\"control__input visually-hidden\"\n            />\n            <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n                >+ ADD NEW TASK</label\n            >\n            <input\n                type=\"radio\"\n                name=\"control\"\n                id=\"control__task\"\n                class=\"control__input visually-hidden\"\n                checked\n            />\n            <label for=\"control__task\" class=\"control__label\">TASKS</label>\n            <input\n                type=\"radio\"\n                name=\"control\"\n                id=\"control__statistic\"\n                class=\"control__input visually-hidden\"\n            />\n            <label for=\"control__statistic\" class=\"control__label\"\n                >STATISTICS</label\n            >\n            </section>\n    `\n};\n\nexport{ addMenu };","const TASK_DESC = ['Сделать домашку', 'Изучить теорию', 'Приготовить еду'];\nconst COLORS_CARD = ['black', 'yellow', 'blue', 'green', 'pink'];\nconst MONTH_NAMES = [\n    'January',\n    'Febrary',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'Semtember',\n    'October',\n    'November',\n    'December',\n];\nexport { COLORS_CARD, MONTH_NAMES, TASK_DESC };","const filterNames  = ['all', 'overdue', 'today', 'favorites', 'repeating', 'archive'];\n\nconst generateFilters = () => {\n   return filterNames.map((filterName) => {\n        return {\n            name: filterName,\n            count: parseInt(Math.random() * 20),\n        }\n   });\n};\n\nexport { generateFilters };\n\n","import { getRandomElemFromArray } from \"../util.js\";\nimport { COLORS_CARD, TASK_DESC } from \"../const.js\";\nconst generateTask = () => {\n    return {\n        description: getRandomElemFromArray(TASK_DESC),\n        color: getRandomElemFromArray(COLORS_CARD),\n        reapitingDays: null,\n        isArchive: Math.random() * 0.5,\n        isFavorite: Math.random() * 0.5,\n        dueDate: new Date,\n        reapeatingDays: {\n            'mo': true,\n            'tu': false,\n            'we': true,\n            'th': false,\n            'fr': false,\n            'sa': true,\n            'su': false,\n        },\n    };\n};\n\nconst generateTasks = (count) => {\n    return new Array(count).fill('').map(generateTask);\n};\n\nexport { generateTasks, generateTask};","const getRandomIntNumber = (min, max) => {\n    return parseInt(Math.random() * (max - min) + min);\n};\n\nconst getRandomElemFromArray = (array) => {\n    return array[getRandomIntNumber(0, array.length - 1)];\n};\n\nexport {getRandomIntNumber, getRandomElemFromArray}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addMenu } from \"./components/menu.js\";\nimport { createFilterTemplate } from \"./components/filters.js\";\nimport { addBoardFilter } from \"./components/boardFilters.js\";\nimport { addCardForm } from \"./components/cardForm.js\";\nimport { addCardTemplate } from \"./components/cardExample.js\";\nimport { addBtnLoadMore } from \"./components/btnLoadMore.js\";\n\nimport { generateFilters } from \"./mock/filter.js\";\nimport { generateTasks } from \"./mock/task.js\";\n\n// Variables\nconst mainContol = document.querySelector('.main__control');\nconst mainFilter = document.querySelector('.main__filter');\nconst board = document.querySelector('.board');\nconst boardTasks = board.querySelector('.board__tasks');\n\nconst filters = generateFilters();\nconst TASK_COUNT = 10;\nconst tasks = generateTasks(TASK_COUNT);\n\n\n//\n// Create page\nconst createPage = () => {\n  mainContol.insertAdjacentHTML('beforeend', addMenu());\n  mainFilter.insertAdjacentHTML('afterbegin', createFilterTemplate(filters));\n  board.insertAdjacentHTML('afterbegin', addBoardFilter());\n  board.insertAdjacentHTML('beforeend', addBtnLoadMore());\n  boardTasks.insertAdjacentHTML('afterbegin', addCardForm(tasks[0]));\n  for (let i = 1; i < TASK_COUNT; i++) {\n    boardTasks.insertAdjacentHTML('beforeend', addCardTemplate(tasks[i]));\n  };\n};\n\n\n\n// Events\nwindow.onload = createPage();\n\n\n"],"sourceRoot":""}